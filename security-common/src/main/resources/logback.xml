<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">


  <property name="log.path" value="/app/webapps/logs"/>
  <property name="maxHistory" value="90"/>
  <property name="maxFileSize" value="50MB"/>

  <springProperty scope="context" name="appName" source="spring.application.name"/>

  <!-- 彩色日志 -->
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

  <!-- 彩色日志格式 -->
  <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %green(%X{trace-id}) %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

  <!-- 控制台日志输出 -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!-- 时间滚动输出 level为 DEBUG 日志 -->
  <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/${appName}/log_debug.log</file>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <pattern>
          <pattern>
            {
            "time": "%date{yyyy-MM-dd HH:mm:ss.SSS}",
            "level": "%level",
            "traceId": "%X{trace-id}",
            "logger": "%logger{64}",
            "method": "%method",
            "line": "%line",
            "message": "%message",
            "stack_trace": "%exception{full}"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.path}/${appName}/debug/log_debug_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>${maxFileSize}</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <!--日志文件保留天数-->
      <maxHistory>${maxHistory}</maxHistory>
    </rollingPolicy>
  </appender>

  <!-- 时间滚动输出 level为 INFO 日志 -->
  <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/${app.name}/log_info.log</file>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <pattern>
          <pattern>
            {
            "time": "%date{yyyy-MM-dd HH:mm:ss.SSS}",
            "level": "%level",
            "traceId": "%X{trace-id}",
            "logger": "%logger{64}",
            "method": "%method",
            "line": "%line",
            "message": "%message"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.path}/${appName}/info/log_info_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>${maxFileSize}</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <!--日志文件保留天数-->
      <maxHistory>${maxHistory}</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>info</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>

  <!-- 时间滚动输出 level为 ERROR 日志 -->
  <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${log.path}/${appName}/log_error.log</file>
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <pattern>
          <pattern>
            {
            "time": "%date{yyyy-MM-dd HH:mm:ss.SSS}",
            "level": "%level",
            "pid": "${PID:-}",
            "thread": "%thread",
            "traceId": "%X{trace-id}",
            "logger": "%logger{64}",
            "method": "%method",
            "line": "%line",
            "message": "%message",
            "stack_trace": "%exception{full}"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.path}/${appName}/error/log_error_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>${maxFileSize}</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
      <!--日志文件保留天数-->
      <maxHistory>${maxHistory}</maxHistory>
    </rollingPolicy>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>error</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>

  <!-- 开发环境: 打印控制台和输出到文件 -->
  <springProfile name="dev,staging">
    <root level="debug">
      <appender-ref ref="CONSOLE"/>
      <appender-ref ref="DEBUG_FILE"/>
      <appender-ref ref="INFO_FILE"/>
      <appender-ref ref="ERROR_FILE"/>
    </root>
  </springProfile>

  <!-- 生产环境: 只输出到文件 -->
  <springProfile name="pro">
    <root level="debug">
      <appender-ref ref="DEBUG_FILE"/>
      <appender-ref ref="INFO_FILE"/>
      <appender-ref ref="ERROR_FILE"/>
    </root>
  </springProfile>

  <root level="info">
    <appender-ref ref="CONSOLE"/>
  </root>

</configuration>
